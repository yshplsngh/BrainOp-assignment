// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  picture   String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  body      String
  tags      String[]
  views     Int
  reactions Reactions?
}

model Reactions {
  id       Int  @id @default(autoincrement())
  likes    Int
  dislikes Int
  post     Post @relation(fields: [postId], references: [id])
  postId   Int  @unique
}

// model Post {
//   id          Int       @id @default(autoincrement())
//   title       String
//   body        String
//   tags        String[]
//   views       Int
//   reaction    Reactions @relation("ReactionW", fields: [reactionsId], references: [id])
//   reactionsId Int
// }
//
// model Reactions {
//   id       Int  @id @default(autoincrement())
//   likes    Int
//   dislikes Int
//   post     Post @relation("ReactionW", fields: [postId], references: [id])
//   postId   Int  @unique
// }

// model Post {
//   id       Int        @id @default(autoincrement())
//   title    String
//   body     String
//   tags     String[]
//   views    Int
//   reaction Reactions?
// }
//
// model Reactions {
//   id       Int  @id @default(autoincrement())
//   likes    Int
//   dislikes Int
//   post     Post @relation(fields: [postId], references: [id])
//   postId   Int  @unique
// }

// model Post {
//   id          Int       @id @default(autoincrement())
//   title       String
//   body        String
//   tags        String[]
//   views       Int
//   reaction    Reactions @relation(fields: [reactionsId], references: [id])
//   reactionsId Int
// }
//
// model Reactions {
//   id       Int  @id @default(autoincrement())
//   likes    Int
//   dislikes Int
//   postId   Int
//   reaction Post @relation(fields: [postId], references: [id])
// }

// model Post {
//   id    Int      @id @default(autoincrement())
//   title String
//   body  String
//   tags  String[]
//   views Int
// }
//
// model Reactions {
//   id       Int @id @default(autoincrement())
//   likes    Int
//   dislikes Int
// }
